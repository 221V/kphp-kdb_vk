#!/usr/bin/python
import sys, os

def header (f):
  f.write ('/* Generated by python script */\n')

errors  = ['LSEEK', 'READ', 'CRC32', 'TYPE', 'DECRYPT', 'MALLOC', 'ALIGN', 'SIZE', 'SHA1', 'MKDIR', 'OPEN', 'FSTAT']
errors += ['ST_DEV', 'ST_INO', 'READIN', 'STATUS', 'FORK', 'CHDIR', 'CREAT', 'STAT', 'PUBKEY_PERMISSIONS']
errors += ['INVAL']

########### copyexec-results errors ###########
errors += ['VOLUME_ID_MISMATCHED', 'HOSTNAME_MISMATCHED', 'DISCONNECT', 'OLD_RESULT']

e = [(s, -(i+1)) for i, s in enumerate (errors)]
e.append (('UNKNOWN', -999))

f = open (os.path.join (sys.path[0], 'copyexec-err.h'), 'w')
header (f)
for s, i in e:
  f.write ('#define COPYEXEC_ERR_' + s + ' (' + str (i) + ')\n')
f.write ('char *copyexec_strerror (int err);\n')
f.close ()
f = open (os.path.join (sys.path[0], 'copyexec-err.c'), 'w')
header (f)
f.write ('#include <stdio.h>\n')
f.write ('#include <assert.h>\n')
f.write ('#include "copyexec-err.h"\n')
f.write ('char *copyexec_strerror (int err) {\n')
f.write ('  static char buf[64];')
f.write ('  switch (err) {\n')
for s, i in e:
  f.write ('    case COPYEXEC_ERR_' + s + ': return "COPYEXEC_ERR_' + s + '"; break;\n')
f.write ('    default: assert (snprintf (buf, sizeof (buf), "COPYEXEC_ERR_UNKNOWN (%d)", err) < sizeof (buf));\n')
f.write ('             return buf;\n')
f.write ('  }\n')
f.write ('}\n')
